// source: proto/services/task_svc/v1/task_template_svc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.proto.services.task_svc.v1.CreateTaskTemplateRequest', null, global);
goog.exportSymbol('proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask', null, global);
goog.exportSymbol('proto.proto.services.task_svc.v1.CreateTaskTemplateResponse', null, global);
goog.exportSymbol('proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest', null, global);
goog.exportSymbol('proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse', null, global);
goog.exportSymbol('proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate', null, global);
goog.exportSymbol('proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.services.task_svc.v1.CreateTaskTemplateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.displayName = 'proto.proto.services.task_svc.v1.CreateTaskTemplateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.displayName = 'proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.services.task_svc.v1.CreateTaskTemplateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.displayName = 'proto.proto.services.task_svc.v1.CreateTaskTemplateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.displayName = 'proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.displayName = 'proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.repeatedFields_, null);
};
goog.inherits(proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.displayName = 'proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.displayName = 'proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pb_public: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    wardId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    subtasksList: jspb.Message.toObjectList(msg.getSubtasksList(),
    proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.services.task_svc.v1.CreateTaskTemplateRequest;
  return proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPublic(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWardId(value);
      break;
    case 5:
      var value = new proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask;
      reader.readMessage(value,proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.deserializeBinaryFromReader);
      msg.addSubtasks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPublic();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSubtasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask;
  return proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask} returns this
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} returns this
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} returns this
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool public = 3;
 * @return {boolean}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.getPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} returns this
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.setPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string ward_id = 4;
 * @return {string}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.getWardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} returns this
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.setWardId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} returns this
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.clearWardId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.hasWardId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated SubTask subtasks = 5;
 * @return {!Array<!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask>}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.getSubtasksList = function() {
  return /** @type{!Array<!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask, 5));
};


/**
 * @param {!Array<!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask>} value
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} returns this
*/
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.setSubtasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.addSubtasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.SubTask, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateRequest} returns this
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateRequest.prototype.clearSubtasksList = function() {
  return this.setSubtasksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateResponse}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.services.task_svc.v1.CreateTaskTemplateResponse;
  return proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateResponse}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.services.task_svc.v1.CreateTaskTemplateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.CreateTaskTemplateResponse} returns this
 */
proto.proto.services.task_svc.v1.CreateTaskTemplateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    wardId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest;
  return proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWardId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWardId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ward_id = 1;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.prototype.getWardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardRequest.prototype.setWardId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    templatesList: jspb.Message.toObjectList(msg.getTemplatesList(),
    proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse;
  return proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate;
      reader.readMessage(value,proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.deserializeBinaryFromReader);
      msg.addTemplates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTemplatesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isPublic: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    wardId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    subtasksList: jspb.Message.toObjectList(msg.getSubtasksList(),
    proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate;
  return proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWardId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 7:
      var value = new proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask;
      reader.readMessage(value,proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.deserializeBinaryFromReader);
      msg.addSubtasks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSubtasksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    taskTemplateId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask;
  return proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskTemplateId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTaskTemplateId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string task_template_id = 2;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.prototype.getTaskTemplateId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.prototype.setTaskTemplateId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool is_public = 4;
 * @return {boolean}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.setIsPublic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string ward_id = 5;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.getWardId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.setWardId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.clearWardId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.hasWardId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string user_id = 6;
 * @return {string}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated SubTask subtasks = 7;
 * @return {!Array<!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask>}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.getSubtasksList = function() {
  return /** @type{!Array<!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask, 7));
};


/**
 * @param {!Array<!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask>} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
*/
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.setSubtasksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.addSubtasks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.SubTask, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate.prototype.clearSubtasksList = function() {
  return this.setSubtasksList([]);
};


/**
 * repeated TaskTemplate templates = 1;
 * @return {!Array<!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate>}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.prototype.getTemplatesList = function() {
  return /** @type{!Array<!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate, 1));
};


/**
 * @param {!Array<!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate>} value
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse} returns this
*/
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.prototype.setTemplatesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate}
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.prototype.addTemplates = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.TaskTemplate, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse} returns this
 */
proto.proto.services.task_svc.v1.GetAllTaskTemplatesByWardResponse.prototype.clearTemplatesList = function() {
  return this.setTemplatesList([]);
};


goog.object.extend(exports, proto.proto.services.task_svc.v1);
